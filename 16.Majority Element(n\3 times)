
MAP SOLUTION:
  vector<int> majorityElement(vector<int>& nums) {
          unordered_map<int,int> freq;
          vector<int> ans;
          for(int i=0;i<nums.size();i++){
              freq[nums[i]]++;
              if(freq[nums[i]]>nums.size()/3){
                  if(find(ans.begin(),ans.end(),nums[i])==ans.end()){
                       ans.push_back(nums[i]);
                  }
              }
          }
          return ans;
      }
      
MODIFIED MOORE VOTING ALGO:

vector<int> majorityElement(vector<int>& nums) {
        int num1=-1,num2=-1,count1=0,count2=0;
        vector<int> ans;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==num1){
                count1++;
            }
            else if(nums[i]==num2){
                count2++;
            }
            else if(count1==0){
                num1=nums[i];
                count1=1;
            }
            else if(count2==0){
                num2=nums[i];
                count2=1;
            }
            else{
                count1--;
                count2--;
            }
        }
        int cnt1=0,cnt2=0;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==num1){
                cnt1++;
            }
            else if(nums[i]==num2){
                cnt2++;
            }
        }
        if(cnt1>(nums.size()/3)){
            ans.push_back(num1);
        }
        if(cnt2>nums.size()/3){
            ans.push_back(num2);
        }
        return ans;
    }
